Engine:
  precision: 32
  epoch: 120
  gpus: [ 0 ]
  eval_interval: 10

logger:
  api_key: None
  workspace: None
  project_name: reid
  task_name: MSMT17-ResNet50

model-manager:
  network_name: resnet50 # the network model
  network-params: # the params used to create model
    num_classes: 1041
  network_inputs: ['img'] # the data dict keys which the network input
  save_name: model  # final model save name is [save_name]_[epoch].pkl
  solver:
    optimizer: SGD
    base_lr: 0.01
    weight_decay: 0.0003
    warmup_epochs: 5
    max_epoch: 120
  loss_list:
    - name: 'xent'  # loss name for display
      type: 'xent'  # loss function (defined in loss.LOSS_FACTORY)
      kwargs: # params for initializing loss module
        reduction: mean
      weight: 1.0   # total loss = weight_1 * loss_1 + weight_2 * loss_2 + ...
      expect_inputs:
        input: score
        target: pid
    - name: 'triplet'  # loss name for display
      type: 'triplet'  # loss function (defined in loss.LOSS_FACTORY)
      weight: 1.0   # total loss = weight_1 * loss_1 + weight_2 * loss_2 + ...
      expect_inputs: # input for loss [argument]:[parameter]
        feat: feat
        target: pid
  evaluator:
    metric: 'euclidean'
    norm: False

dataset:
  dataset_name: msmt17
  dataset_path: ../dataset/MSMT17
  image_size:
    - 256
    - 128
  num_workers: 8
  batch_size_train: 128
  batch_size_test: 128
  num_instance: 4
  type: image
  # reading method
  reading_method_train:
    name: get_img
    # define other parameter, such as image size
    image_size: [256, 128]
  reading_method_test:
    name: get_img
    # define other parameter, such as image size
    image_size: [256, 128]
