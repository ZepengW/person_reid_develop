gpu: [0]
eval_interval: 20 # eval each [eval_interval]
vis: False       # visualize feature distribution
vis_interval: 20  # visualization each [vis_interval]

model-manager:
  network_name: resnet50 # the network model
  network-params: # the params used to create model
    pretrained: True
  network_inputs: ['img'] # the data dict keys which the network input
  save_name: model  # final model save name is [save_name]_[epoch].pkl
  #load_path: ./output/test.pkl   # load from './output/test.pkl'
  #load_path: True        # auto load model with [save_name]
  #load_path: False       # Do Not Load
  solver:
    optimizer: SGD
    base_lr: 0.01
    weight_decay: 0.0003
    warmup_epochs: 5
    max_epoch: 120
  loss:
    use_loss: ['wrt','xent_label_smooth']    # loss used for backward
    wrt:    # loss wrt params
      weight: 1.0     # loss weight in total loss
      except_input: 'feature'     # except input tensor type
    xent_label_smooth:     # loss xent_label_smooth params
      weight: 1.0
      params_initial: ['num_classes']     # params used for initialize the loss object
      except_input: 'score'       # except input tensor type
    triplet:
      weight: 1.0
      except_input: 'feature'
