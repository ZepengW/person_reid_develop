mode: train
task-name: maskformer-occ-duke
gpu: [0, 1]


model-manager:
  network_name: maskformer # the network model
  save_name: maskformer-occ-duke
  network-params: # the params used to create model
    vit_pretrained_path: ./pretrained/jx_vit_base_p16_224-80ecf9dd.pth
    pretrained: True
    num_camera: 8
    img_size: [256,128]
    stride_size: [11, 11]
  network_inputs: ['img','ss','camera_id'] # the data dict keys which the network input
  epoch: 120
  load_path: False
  solver:
    optimizer: Adam
    base_lr: 0.0001
    bias_lr_factor: 2
    cosine_mergin: 0.5
    weight_decay: 0.0001
    weight_decay_bias: 0.0001
    warmup_epochs: 5
    max_epoch: 120
  loss:
    use_loss: [cross_entropy, triplet]    # loss used for backward
    triplet:
      weight: 1
      list_weight: [1, 0.25, 0.25, 0.25, 0.25]
    cross_entropy:
      weight: 1
      list_weight: [1, 0.25, 0.25, 0.25, 0.25] # for output score is list
    wrt:    # loss wrt params
      weight: 1     # loss weight in total loss
      except_input: 'feature'     # except input tensor type
    xent_label_smooth:     # loss xent_label_smooth params
      weight: 1.0
      params_initial: ['num_classes']     # params used for initialize the loss object
      except_input: 'score'       # except input tensor type


dataset:
  dataset_name: duke
  dataset_path: ../dataset/Occluded-DukeMTMC
  num_workers: 8
  batch_size_train: 128
  batch_size_test: 256
  type: image
  reading_method_train:
    name: get_img_ss
    # define other parameter, such as image size
    image_size: [ 256, 128 ]
    mode: train
  reading_method_test:
    name: get_img_ss
    # define other parameter, such as image size
    image_size: [ 256, 128 ]
    mode: test


