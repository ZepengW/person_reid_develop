mode: train
gpu: [0]
eval_interval: 1
precision: 32

logger:
  task_name: MSMT17-TransReID

model-manager:
  network_name: transreid # the network model
  network-params: # the params used to create model
    PRETRAIN_CHOICE: 'imagenet'
    PRETRAIN_PATH: './pretrained/jx_vit_base_p16_224-80ecf9dd.pth'
    METRIC_LOSS_TYPE: 'triplet'
    IF_LABELSMOOTH: 'off'
    IF_WITH_CENTER: 'no'
    NAME: 'transformer'
    NO_MARGIN: True
    TRANSFORMER_TYPE: 'vit_base_patch16_224_TransReID'
    STRIDE_SIZE: [ 12, 12 ]
    SIE_CAMERA: True
    SIE_COE: 3.0
    JPM: True
    RE_ARRANGE: True
    CAMERA_NUM: 15
    SIZE_INPUT: [256, 128]
    num_classes: 1041
  network_inputs: ['img','camera_id'] # the data dict keys which the network input
  epoch: 120
  solver:
    optimizer: SGD
    base_lr: 0.008
    bias_lr_factor: 2
    cosine_mergin: 0.5
    weight_decay: 0.0001
    weight_decay_bias: 0.0001
    warmup_epochs: 5
    max_epoch: 120
  loss:
    - name: 'loss-xent'  # loss name for display
      type: 'xent'  # loss function (defined in loss.LOSS_FACTORY)
      kwargs: # params for initializing loss module
        list_weight: [0.5,0.125,0.125,0.125,0.125]
      weight: 1.0   # total loss = weight_1 * loss_1 + weight_2 * loss_2 + ...
      expect_inputs: # input for loss [argument]:[parameter]
        input: score
        target: pid
    - name: 'loss-triplet'  # loss name for display
      type: 'triplet'  # loss function (defined in loss.LOSS_FACTORY)
      kwargs: # params for initializing loss module
        list_weight: [ 0.5,0.125,0.125,0.125,0.125 ]
      weight: 1.0   # total loss = weight_1 * loss_1 + weight_2 * loss_2 + ...
      expect_inputs: # input for loss [argument]:[parameter]
        feat: feat
        target: pid
  re_ranking: False


dataset:
  dataset_name: msmt17
  dataset_path: ../dataset/MSMT17
  num_workers: 4
  batch_size_train: 64
  reading_method_train:
    name: get_img
    # define other parameter, such as image size
    image_size: [ 256, 128 ]
    mean: [0.5, 0.5, 0.5]
    std: [0.5, 0.5, 0.5]
    type: train
  batch_size_test: 256
  reading_method_test:
    name: get_img
    # define other parameter, such as image size
    image_size: [ 256, 128 ]
    mean: [ 0.5, 0.5, 0.5 ]
    std: [ 0.5, 0.5, 0.5 ]
    type: test
  type: image


